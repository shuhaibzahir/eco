 
router.get("/edit-category/:topic",auth,(req,res)=>{
  let id = req.params.topic;
  
  productDB.getOneCategory(id).then((result)=>{
     let editData = result;
     res.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
    res.render("admin/categoryedit",{layout:"adminLayout",adminStatus:true,editData,adminData:req.session.admin.details})
  }).catch((err)=>{
    console.log(err)
  })
  
})
// ..............................category delete
router.get("/delete-category/:topic",auth,(req,res)=>{
  let id = req.params.topic;
  
  productDB.categoryDelete(id).then((result)=>{
   
     res.redirect("/admin/category")
  }).catch((err)=>{
    console.log(err)
  })
  
})
// ......................................catgory edit post 

router.post("/edit-category",(req,res)=>{
 let catUpdate={}
 productDB.updateCategory(req.body).then((d)=>{
  catUpdate={status:true}
  res.json(catUpdate)
 }).catch((err)=>{
  catUpdate={status:false,msg:err}
  res.json(catUpdate)
 })
})
 
// .................................end this line


// ...................allproduct view

//,,,,,,,,,,,category codes

router.get("/category",auth,(req,res)=>{
  res.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
  res.render("admin/category",{layout:"adminLayout", adminStatus:true,adminData:req.session.admin.details})

  // productDB.getAllCat().then((result)=>{
  //   console.log(result)
  //   let watch =[]
  //   let footwear =[]
  //   let clothes = []
  //   result.forEach((item)=>{
  //     if(item.section =="watch"){
  //       watch.push(item)
  //     }else if(item.section =="footwear"){
  //       footwear.push(item)
  //     }else{
  //       clothes.push(item)
  //     }
     
  //   })
  //   res.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
  //   res.render("admin/category",{layout:"adminLayout",clothes,watch,footwear,adminStatus:true,adminData:req.session.admin.details})
  // }).catch((err)=>{
  //   console.log(err)
  // })
  
})
// categoy management post
router.post("/category/management",(req,res)=>{
   
  let catStatus={}
  productDB.categoryManage(req.body).then((result)=>{

    catStatus = {status:true}
    res.json(catStatus)
  }).catch((err)=>{
   
    catStatus = {status:false,msg:err}
    res.json(catStatus)
  })
})


$.ajax({
url: 'upload.php',
method: 'POST',
data: { image: base64data },
success: function (data) {
$modal.modal('hide');
$('#uploaded_image').attr('src', data);
}
}); 







//this is simple 
 image1.mv("./public/pimages/" + d._id + "001.jpg", err => {
      if (err) {
        console.log(err)
      }
    })
    image2.mv("./public/pimages/" + d._id + "002.jpg", err => {
      if (err) {
        console.log(err)
      }
    })
    image3.mv("./public/pimages/" + d._id + "003.jpg", err => {
      if (err) {
        console.log(err)
      }
    })
    image4.mv("./public/pimages/" + d._id + "004.jpg", err => {
      if (err) {
        console.log(err)
      }
    })

    <table id="datatables" class="table table-striped table-no-bordered table-hover" cellspacing="0"
                width="100%" style="width:100%">
                <thead>
                  <tr>
                    <th>Order Id</th>
                    <th>User Id</th>
                    <th>P_Name</th>
                    <th>Order Date</th>
                    <th>Payment</th>
                    <th>Total</th>

                    <th>Method</th>
                    <th>Status</th>
                    <th>Action</th>
                    {{!-- //class="disabled-sorting text-right"// --}}
                  </tr>
                </thead>
                <tfoot>
                  <tr>
                    <th>Order Id</th>
                    <th>User Id</th>
                    <th>P_Name</th>
                    <th>Order Date</th>

                    <th>Payment</th>
                    <th>Total</th>

                    <th>Method</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </tfoot>
                <tbody>

                  {{#each orderData}}
                  {{#each products}}

                  <tr id="table_row{{pid}}"
                    class=" {{#ifEqual status 'CANCEL'}}canceled  {{else}} {{#ifEqual status 'DELIVERED'}}delivered{{/ifEqual}} {{/ifEqual}}">
                    <td>{{../_id}}</td>
                    <td><a href="/admin/user/oderdetails/{{../userId}}">{{../userId}}</a></td>
                    <td>{{productname}}</td>
                    <td>{{../placedDated}}</td>
                    <td>{{../paymentStatus}}</td>
                    <td> â‚¹ {{total}}</td>
                    <td>{{../payment}}</td>

                    <td>

                      <select class="custom-select" data-size="7" data-style="btn btn-dark" id="statusoption{{pid}}"
                        onchange="changeOStatus( '{{../_id}}','{{pid}}',this.value)" name="status" {{#ifEqual
                        status 'DELIVERED' }}disabled {{else}} {{#ifEqual status 'CANCEL' }}disabled {{/ifEqual}}
                        {{/ifEqual}}>
                        <option value="{{status}}" selected disabled>{{status}} </option>
                        <option value="PLACED">PLACED</option>
                        <option value="SHIPPED">SHIPPED</option>
                        <option value="DELIVERED">DELIVERED </option>

                      </select>

                    </td>

                    <td>
                      <p class=" btn {{#ifEqual status 'DELIVERED' }} btn-dark{{else}} {{#ifEqual status 'CANCEL' }} btn-dark {{else}}btn-danger{{/ifEqual}}{{/ifEqual}}"
                        style="cursor: pointer;  " {{#ifEqual status 'DELIVERED' }}onclick="" {{else}} {{#ifEqual
                        status 'CANCEL' }} onclick=""
                        {{else}}onclick=" cancelProduct('{{../userId}}','{{../_id}}','{{pid}}')" {{/ifEqual}}
                        {{/ifEqual}}>Cancel</p>
                    </td>
                  </tr>
                  {{/each}}
                  {{/each}}

                </tbody>
              </table>